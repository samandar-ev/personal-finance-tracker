extends layout

block content
  h2 Financial Report

  h3 Income Breakdown
  .chart-container(style="position: relative; height:400px; width:400px; margin:auto;")
    canvas#incomeChart
  table
    thead
      tr
        th Category
        th Amount
        th Percentage
    tbody

  h3 Expense Breakdown
  .chart-container(style="position: relative; height:400px; width:400px; margin:auto;")
    canvas#expenseChart
  table
    thead
      tr
        th Category
        th Amount
        th Percentage
    tbody

  // Include Chart.js via CDN
  script(src="https://cdn.jsdelivr.net/npm/chart.js")
  
  script.
    // Parse data passed from the route
    var incomeData = !{incomeData};
    var expenseData = !{expenseData};

    // Define a palette of colors for categories
    var colors = ['#3498DB', '#1ABC9C', '#9B59B6', '#E67E22', '#E74C3C', '#F1C40F', '#2ECC71', '#34495E'];

    // Assign colors based on index
    var incomeColors = incomeData.map((_, index) => colors[index % colors.length]);
    var expenseColors = expenseData.map((_, index) => colors[index % colors.length]);

    // Create Income Chart
    var ctxIncome = document.getElementById('incomeChart').getContext('2d');
    new Chart(ctxIncome, {
      type: 'pie',
      data: {
        labels: incomeData.map(item => item.category),
        datasets: [{
          data: incomeData.map(item => item.amount),
          backgroundColor: incomeColors
        }]
      },
      options: {
        plugins: {
          legend: { position: 'bottom' },
          tooltip: {
            callbacks: {
              label: function(context) {
                var idx = context.dataIndex;
                var label = context.label || '';
                var amount = incomeData[idx].amount;
                var percentage = incomeData[idx].percentage;
                return label + ': $' + amount.toFixed(2) + ' (' + percentage + '%)';
              }
            }
          }
        }
      }
    });

    // Create Expense Chart
    var ctxExpense = document.getElementById('expenseChart').getContext('2d');
    new Chart(ctxExpense, {
      type: 'pie',
      data: {
        labels: expenseData.map(item => item.category),
        datasets: [{
          data: expenseData.map(item => item.amount),
          backgroundColor: expenseColors
        }]
      },
      options: {
        plugins: {
          legend: { position: 'bottom' },
          tooltip: {
            callbacks: {
              label: function(context) {
                var idx = context.dataIndex;
                var label = context.label || '';
                var amount = expenseData[idx].amount;
                var percentage = expenseData[idx].percentage;
                return label + ': $' + amount.toFixed(2) + ' (' + percentage + '%)';
              }
            }
          }
        }
      }
    });

    // Function to fill a table with breakdown data
    function fillTable(tableSelector, data, colors) {
      var tbody = document.querySelector(tableSelector + ' tbody');
      data.forEach(function(item, index) {
        var tr = document.createElement('tr');
        // Category with colored dot
        var tdCategory = document.createElement('td');
        tdCategory.innerHTML = '<span style="display:inline-block;width:12px;height:12px;background:' + colors[index] + ';margin-right:5px;border-radius:50%;"></span>' + item.category;
        tr.appendChild(tdCategory);
        // Amount
        var tdAmount = document.createElement('td');
        tdAmount.textContent = '$' + item.amount.toFixed(2);
        tr.appendChild(tdAmount);
        // Percentage
        var tdPercent = document.createElement('td');
        tdPercent.textContent = item.percentage + '%';
        tr.appendChild(tdPercent);
        tbody.appendChild(tr);
      });
    }
    
    // Fill the tables (assumes the first table is income, second is expense)
    fillTable('table:nth-of-type(1)', incomeData, incomeColors);
    fillTable('table:nth-of-type(2)', expenseData, expenseColors);
